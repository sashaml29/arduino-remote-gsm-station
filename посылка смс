// GSM - Version: Latest 
//https://www.tinyosshop.com/arduino-gsm-shield

//cхема
//https://easyeda.com/sasha_ml/Arduino_Mega-15a761a8028f4398b58b41b1c01d44cf

//этот код
//https://create.arduino.cc/editor/sasha_ml/d271f25d-d158-4372-87bb-69d778120403/preview


#define gsmport Serial1


String textsms, number;
String mynumber="+79234347101";

void setup() {

Serial.begin(115200);
gsmport.begin(115200);
Serial.println("Start sketch");

//Настраиваем приём сообщений с других устройств
gsmport.print("AT+CMGF=1\r");
delay(300);
printstrfrommodem();
gsmport.print("AT+IFC=1, 1\r");
delay(300);
printstrfrommodem();
gsmport.print("AT+CPBS=\"SM\"\r");
delay(300);
printstrfrommodem();
gsmport.print("AT+CNMI=1,2,2,1,0\r");
delay(500);
printstrfrommodem();



   pinMode(13, OUTPUT);
  
}

// the loop function runs over and over again forever
void loop() {
  checkforsms();
 }
  

 int readSerial(char result[]) {////
// GSM - Version: Latest 
//https://www.tinyosshop.com/arduino-gsm-shield

//cхема
//https://easyeda.com/sasha_ml/Arduino_Mega-15a761a8028f4398b58b41b1c01d44cf

//этот код
//https://create.arduino.cc/editor/sasha_ml/d271f25d-d158-4372-87bb-69d778120403/preview
//--
//


#define gsmport Serial1

String textsms, number, txt;
String mynumber="+79218277101";
String temp;
int debugstatus=1;
String val=""; //глобальная переменная где храним строку с модема, чотбы не создавать лишний string в вызываемых процедурах

void setup() {
Serial.begin(115200);
dbgprint("Start sketch");
gsmport.begin(115200);
gsmport.setTimeout(500); //будем ждать ответа модема по полсекунды
delay(500);
//Настраиваем приём сообщений с других устройств и печатаем ответы модема
gsmport.print("AT+CMGF=1\r");
printstrfrommodem();
gsmport.print("AT+IFC=1, 1\r");
printstrfrommodem();
gsmport.print("AT+CPBS=\"SM\"\r");
printstrfrommodem();
gsmport.print("AT+CNMI=1,2,2,1,0\r");
printstrfrommodem();
gsmport.println("AT+CMGD=1,4"); // удалить все сообщения в памяти
printstrfrommodem();

pinMode(13, OUTPUT); //для идикаторного диода

dbgprint("Setup done"); 
}


void loop() 
{
  if (StrFromSerial(txt)>0)  //ждем команды вручную с порта и если что-то есть - посылаем в модем и печатаем ответ
  {
      gsmport.print(txt);
      temp=gsmport.readString();
      Serial.print(temp);
  };
  checkforsms(); // проверяем буфер порта модема  на наличе данных и смс в нем
 
}
  

void checkforsms() 
 {
  if(gsmport.available()) //если модуль что-то послал
  {  
    val=gsmport.readString();
    if (val.indexOf("+CMT") > -1)
    {
     Serial.println("Modem send SMS:");
     Serial.println(val);
     gsmport.println("AT+CMGD=1,4"); // удалить все сообщения в памяти чтобы не забивать память модема
     gsmport.readString(); // игнорируем ответ- читаем в никуда
    String Numtel=substrPoNomeru(1);
    String DateTime=substrPoNomeru(3);
    Serial.println("Numtel "+Numtel);
    Serial.println("DateTime "+DateTime);
     if (val.indexOf(mynumber) > -1)
     {
       Serial.println("This mynumber"); 
       if (val.indexOf("#info") > -1) sendinfo();
       if (val.indexOf("#settime") > -1) settimedatefromsms();
       if (val.indexOf("#setmynum") > -1) setmynumber();
      }
    }
    else
    {
      Serial.println("Modem send other - not sms");
      Serial.println(val);
    }
  }
 }


//здесь пошли процедуры исполнения команд, принятых в смс
 void sendinfo() 
  {
  textsms="info:";
  textsms=textsms+"\r"+"tepl 29 10:15";
   textsms=textsms+"\r"+"komn 20 21:30" ;
   textsms=textsms+"\r"+"mans 15";
   textsms=textsms+"\r"+"podah 29";
   textsms=textsms+"\r"+"obrat 25";
   sendmessage(mynumber, textsms);
   inf("comamnd #sendinfo");
  }
 
 void settimedatefromsms()
  {
   inf("comamnd #settime");
  }

void setmynumber ()
{
 inf("command #setmynum");
//тут поставим кнопку при зажатии которой можно записывать мастер номер
  String Mynum=substrPoNomeru(1);
 inf(Mynum)  ;
}
  
 void sendmessage(String telnum, String text) 
{
  if (telnum.length() > 4)
  {
    if (text.length() < 160)
     {
     delay(100);
     gsmport.println("AT"); // пошлем на всякий случай пустую команду, если в буфере модема неисполненные симыолы
     delay(100);
     gsmport.print("AT+CMGF=1\r");
     delay(200);
     gsmport.println("AT+CMGS=\"" + telnum + "\"");
     delay(200);
     gsmport.println(text);
     delay(200);
     gsmport.println((char)26);
     delay(200);
    }
    else
     {
      Serial.println("Число символов в смс превышает 160:"); 
      Serial.println(text.length()); 
     }
  }
}

 
 //функция читает данные с порта 0 без пауз и записывает в переданную переменную val
 int StrFromSerial(String &val)  // val - передача параметра поссылке, ее нужно менять
{ 
  int i=0;
  if(Serial.available()) // что-то послалано в порт
  {  
    char ch = ' ';
    val = "";
    while(Serial.available()) 
    {  
     ch = Serial.read();
     val += char(ch); //собираем принятые символы в строку
     delay(5);
    }
    i=1;
  }
  return i;
}   


void dbgprint(String text) {
  if (debugstatus=1)  Serial.println(text); 
 }


void inf(String text) {  //вывод промежуточнонй информации в порт на дисплей или еще куда
  Serial.println(text); 
 }
 
 
 
//процедуры разбора строки данные идут в кавычках
//возвращает подстроку между кавычками по номеру данных
String substrPoNomeru(int num)
{// val - глобальная переменная, где содержится строка для разбора
  String strret="";
  char q='"'; // будем искать символ кавычку
  int poz2=-1; // позиция 0 это первая позиция в строке
  int poz1=-1; 
  int k=0;
  for (int i=0; i <= val.length()-1 ; i++)
  {
   if (val[i]==q)
    {
      k=k+1;
      if (k==num*2-1) poz1=i;
      if (k==num*2) poz2=i;
    };
  };
  if ((poz1>-1)&(poz2>-1))  strret=val.substring(poz1+1, poz2);
  return strret;
}


 void printstrfrommodem() // печатает ответ модема в порт
 {
    val=gsmport.readString();
    Serial.print("GSM modem send> ");
    Serial.println(val);
 }   

// GSM - Version: Latest 
//https://www.tinyosshop.com/arduino-gsm-shield

//cхема
//https://easyeda.com/sasha_ml/Arduino_Mega-15a761a8028f4398b58b41b1c01d44cf

//этот код
//https://create.arduino.cc/editor/sasha_ml/d271f25d-d158-4372-87bb-69d778120403/preview
//--
//


#define gsmport Serial1


String textsms, number, txt;
String mynumber="+79218277101";
int debugstatus=1;
String val=""; //глобальная переменная где храним строку с модема, чотбы не создавать лишний string в вызываемых процедурах

void setup() {

Serial.begin(115200);
dbgprint("Start sketch");
gsmport.begin(115200);

delay(500);
//Настраиваем приём сообщений с других устройств
gsmport.print("AT+CMGF=1\r");
delay(300);
printstrfrommodem();
gsmport.print("AT+IFC=1, 1\r");
delay(300);
printstrfrommodem();
gsmport.print("AT+CPBS=\"SM\"\r");
delay(300);
printstrfrommodem();
gsmport.print("AT+CNMI=1,2,2,1,0\r");
delay(300);
printstrfrommodem();
gsmport.println("AT+CMGD=1,4"); // удалить все сообщения в памяти
delay(300);
printstrfrommodem();

   pinMode(13, OUTPUT);
  
}


void loop() {
  
  
  
  String txt="";
  if (StrFromSerial(txt)>0)  //ждем последовательность с порта 0 и если что-то есть - посылаем в модем
  {
      gsmport.setTimeout(1000);
      gsmport.print(txt);
      String vv=gsmport.readString();
      Serial.print(vv);
      
      //PrintFromModemInSec(5);
      
      
    
  };
  
  checkforsms(); // проверяем бфер порта модема наналиче данных и смс в нем
  
 }
  

 int readSerial(char result[]) {
  int i = 0;
  while (1) {
    while (Serial.available() > 0) {
      char inChar = Serial.read();
      if (inChar == '\n') {
        result[i] = '\0';
        Serial.flush();
        return 0;
      }
      if (inChar != '\r') {
        result[i] = inChar;
        i++;
      }
    }
  }
}

void sendmessage(String telnum, String text) 
{

  if (telnum.length() > 4)
  {
    if (text.length() < 160)
     {
     delay(100);
     gsmport.println("AT"); // пошлем на всякий случай пустую команду, если в буфере модема неисполненные симыолы
     delay(100);
     gsmport.print("AT+CMGF=1\r");
     delay(200);
     gsmport.println("AT+CMGS=\"" + telnum + "\"");
     delay(200);
     gsmport.println(text);
     delay(200);
     gsmport.println((char)26);
     delay(200);
    }
    else
     {
      Serial.println("Число символов в смс превышает 160:"); 
      Serial.println(text.length()); 
     }
  }
}

 void printstrfrommodem() {
  if(gsmport.available()) //если модуль что-то послал
  {  
    char ch = ' ';
    val = ""; // глобальная
    
    while(gsmport.available()) 
     {  
       ch = gsmport.read();
       val += char(ch); //собираем принятые символы в строку
       delay(5);
     }

    Serial.print("GSM modem send> ");
    Serial.println(val);
  }
 }   
    // ждет сообщений с модема в течении interval секунд и печатает их
 void PrintFromModemInSec(int interval) {
 float ms = millis();
 while (millis()<ms+interval*1000) 
  {
   printstrfrommodem(); 
  }
 }
 
 
 
 void checkforsms() {
  if(gsmport.available()) //если модуль что-то послал
  {  
   /* char ch = ' ';
    val = "";
    
    while(gsmport.available()) 
     {  
       ch = gsmport.read();
       val += char(ch); //собираем принятые символы в строку
       delay(3);
     }*/
      
   /*размер буфера порта serial 64 байта, часть сообщения теряется на скорости 115200, 
   при посылке смс остается только 14 символов от текста самой смс
   желательно команды управления делать не длиннее 10 символов
   размер буфера можно увеличить правкой библиотек, но вданной задаче это не нужно 
   может скорость 9600 лучше будет*/  
    //Serial.print("GSM modem send> ");
    //Serial.println(val);
   
   //это работает лучше
    gsmport.setTimeout(1000);
      val=gsmport.readString();
      Serial.print(val);
    if (val.indexOf("+CMT") > -1)
    {
     
     Serial.println("Modem send SMS:");
     Serial.println(val);
     gsmport.println("AT+CMGD=1,4"); // удалить все сообщения в памяти чтобы не забивать память модема
     //gsmport.readstring
     delay(300);
    String Numtel=substrPoNomeru(1);
    String DateTime=substrPoNomeru(2);
     if (val.indexOf(mynumber) > -1)
     {
       Serial.println("This mynumber"); 
       if (val.indexOf("#info") > -1) sendinfo();
       if (val.indexOf("#settime") > -1) settimedatefromsms();
       if (val.indexOf("#setmynum") > -1) setmynumber();
        
      }
    }
    else
    {
      Serial.println("Modem send other - not sms");
      Serial.println(val);
    }
    
    
    
  }
 }
 
 void sendinfo() 
  {
  //textsms="info:";
  textsms=textsms+"\r"+"tepl 29 10:15";
   textsms=textsms+"\r"+"komn 20 21:30" ;
   textsms=textsms+"\r"+"mans 15";
   textsms=textsms+"\r"+"podah 29";
   textsms=textsms+"\r"+"obrat 25";
   sendmessage(mynumber, textsms);
   inf("comamnd #sendinfo");
  }
 
 int StrFromSerial(String &val)  // val - предача парметра поссылке, ее нужно менять
{int i=0;
  if(Serial.available()) // что-то послалано в порт
  {  
    char ch = ' ';
    val = "";
    
    while(Serial.available()) 
    {  
     ch = Serial.read();
     val += char(ch); //собираем принятые символы в строку
     delay(5);
    }
    i=1;
  }
  
  return i;
}   



int readSerialstr(String result) {
  
  int i = 0;
 result="";
    while (Serial.available() > 0) {
      
      char inChar = Serial.read();
      if (inChar == '\n') {
        //Serial.flush();
        return 0;
      }
      if (inChar != '\r') {
       result=result+char(inChar);
        i++;
      }
    }
  return i;
}

void dbgprint(String text) {
  if (debugstatus=1)  Serial.println(text); 
 }

void inf(String text) {  //вывод промежуточнонй информации в порт на дисплей или еще куда
  Serial.println(text); 
 }
 
 
//процедуры разбора строки
//возвращает подстроку между кавычками по порядку следования
String substrPoNomeru(int num)
{// val - глобальная переменная, где содержится строка для разбора
  String strret="";
  char q='"'; // будем искать символ кавычку
  int poz2=-1; // позиция 0 это первая позиция в строке
  int poz1=-1; 
  int k=0;
  for (int i=0; i <= val.length()-1 ; i++)
  {
   if (val[i]==q)
    {
      k=k+1;
      if (k==num*2-1) poz1=i;
      if (k==num*2) poz2=i;
    };
  };
  if ((poz1>-1)&(poz2>-1))  strret=val.substring(poz1+1, poz2);
  return strret;
}

void settimedatefromsms()
{
  inf("comamnd #settime");
}

void setmynumber ()
{
 inf("command #setmynum");
//тут поставим кнопку при зажатии которой можно записывать мастер номер
  String Mynum=substrPoNomeru(1);
 inf(Mynum)  ;
 
  
  
}
  int i = 0;
  while (1) {
    while (Serial.available() > 0) {
      char inChar = Serial.read();
      if (inChar == '\n') {
        result[i] = '\0';
        Serial.flush();
        return 0;
      }
      if (inChar != '\r') {
        result[i] = inChar;
        i++;
      }
    }
  }
}

void sendmessage(String telnum, String text) 
{

  if (telnum.length() > 4)
  {
    if (text.length() < 160)
     {
     delay(100);
     gsmport.println("AT"); // пошлем на всякий случай пустую команду, если в буфере модема неисполненные симыолы
     delay(100);
     gsmport.print("AT+CMGF=1\r");
     delay(100);
     gsmport.println("AT+CMGS=\"" + telnum + "\"");
     delay(100);
     gsmport.println(text);
     delay(100);
     gsmport.println((char)26);
     //delay(100);
    }
    else
     {
      Serial.println("Число символов в смс превышает 160:"); 
      Serial.println(text.length()); 
     }
  }
}

 void printstrfrommodem() {
  if(gsmport.available()) //если модуль что-то послал
  {  
    char ch = ' ';
    String val = "";
    
    while(gsmport.available()) 
     {  
       ch = gsmport.read();
       val += char(ch); //собираем принятые символы в строку
       delay(5);
     }

    Serial.print("GSM modem send> ");
    Serial.println(val);
  }
 }   
   
   // ждет сообщений с модема в течении interval секунд и печатает их
   void printstrsec(int interval) {
 float ms = millis();
 while (millis()<ms+interval*1000) 
  {
   printstrfrommodem(); 
  }
 }
 
 void checkforsms() {
  if(gsmport.available()) //если модуль что-то послал
  {  
    char ch = ' ';
    String val = "";
    
    while(gsmport.available()) 
     {  
       ch = gsmport.read();
       val += char(ch); //собираем принятые символы в строку
       delay(3);
     }
    Serial.print("GSM modem send> ");
    Serial.println(val);
    if (val.indexOf("+CMT") > -1)
    {
     Serial.println("This SMS"); 
     if (val.indexOf(mynumber) > -1)
     {
       Serial.println("This mynumber"); 
       if (val.indexOf("#info") > -1)
       {
         Serial.println("sending info");
         sendinfo();
        }
      }
    }
    
    
  }
 }
 
 void sendinfo() 
 {
  textsms=textsms+"\r"+"tepl 29 10:15";
   textsms=textsms+"\r"+"komn 20 21:30" ;
   textsms=textsms+"\r"+"mans 15";
   textsms=textsms+"\r"+"podah 29";
   textsms=textsms+"\r"+"obrat 25";
   
   sendmessage(mynumber, textsms);
 }
